name: CI Pipeline

on:
  push:
    branches: [ main, develop ]

  pull_request:
    branches: [ main ]
  
  workflow_dispatch:

env:
  PYTHON_VERSION_DEFAULT: '3.9'

jobs:
 
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
        pip --version
    
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install flake8  # For linting
        pip list  # Display all installed packages    

    - name: Run tests with pytest
      run: |
        pytest --verbose --cov=calculator --cov=app --cov-report=term --cov-report=xml --cov-report=html
    
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION_DEFAULT }}
    
    - name: Install safety
      run: pip install safety
    
    - name: Run safety check
      run: safety check --file requirements.txt --json
      continue-on-error: true  